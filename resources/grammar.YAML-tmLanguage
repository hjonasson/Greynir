# [PackageDev] target_format: plist, ext: tmLanguage
---
name: 'Reynir grammar'
fileTypes: [grammar]
scopeName: source.grammar
uuid: 1aae12ac-bbb3-4669-bcfa-489d80d090cc

patterns:

- include: '#comments'
- include: '#strings'

- comment: Punctuation within productions
  name: keyword.other.grammar
  match: â†’|\||=|->|>

- comment: Token repetition specifiers
  name: variable.parameter.function.keyword.grammar
  match: \?|\*|\+

- comment: Terminals starting with a lowercase letter
  name: storage.type.class.grammar
  match: \b([[:lower:]][[:word:]]*)

- comment: Variant literals starting with underscores
  name: constant.numeric.integer.decimal.grammar
  match: (_[[:alnum:]]+)*

- comment: Variants starting with a forward slash
  name: entity.name.function.decorator.grammar
  match: /([[:lower:]]+)

- comment: Pragma directives
  name: keyword.other.grammar
  match: \$([[:lower:]][[:word:]]*)

repository:

  comments:
    patterns:
    - comment: Comment from hash sign to end of line
      name: comment.line.double-slash.grammar
      begin: "#"
      end: $\n?

  strings:
    patterns:
    - comment: Literal terminals within single quotes
      name: string.quoted.single.grammar
      begin: "'"
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.grammar}
      end: "'"
      endCaptures:
        '0': {name: punctuation.definition.string.end.grammar}

    - comment: Literal terminals within double quotes
      name: string.quoted.double.grammar
      begin: "\""
      beginCaptures:
        '0': {name: punctuation.definition.string.begin.grammar}
      end: "\""
      endCaptures:
        '0': {name: punctuation.definition.string.end.grammar}
